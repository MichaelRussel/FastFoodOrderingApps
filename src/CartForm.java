
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class CartForm extends javax.swing.JFrame {

    /**
     * Creates new form CartForm
     */
    
    CartForm[] cartData = new CartForm[10];
    
    boolean burgerOrdered = false, pizzaOrdered =false, nachosOrdered = false,
            tacoOrdered = false, nuggetOrdered = false, chickenOrdered =false;
    
    int burgerQty = 0, pizzaQty = 0, nachosQty, tacoQty, nuggetQty, chickenQty;
    String burgerId = "FD001",pizzaId = "FD004",nachosId = "FD002",tacoId = "FD005",nuggetId = "FD003",chickenId = "FD006";
    int burgerPrice = 20000, pizzaPrice = 50000, nachosPrice = 20000, 
        tacoPrice = 30000, nuggetPrice = 10000, chickenPrice = 40000;
    int subTotal,grandTotal;
    String currentSelectedId;
    
    
    public CartForm() {
        initComponents();
    }
    
    public CartForm(MainForm[] transactionData) {
        
        initComponents();
        // initial mode
        saveBtn.setVisible(false);
        cancelBtn.setVisible(false);
        quantityField.setEnabled(false);
        
        //set ordered data
        this.burgerOrdered = transactionData[0].burgerOrdered;
        this.pizzaOrdered = transactionData[0].pizzaOrdered;
        this.nachosOrdered = transactionData[0].nachosOrdered;
        this.tacoOrdered = transactionData[0].tacoOrdered;
        this.nuggetOrdered = transactionData[0].nuggetOrdered;
        this.chickenOrdered = transactionData[0].chickenOrdered;
        
        //set food quantity
        this.burgerQty = transactionData[0].burgerQty;
        this.pizzaQty = transactionData[0].pizzaQty;
        this.nachosQty = transactionData[0].nachosQty;
        this.tacoQty = transactionData[0].tacoQty ;
        this.nuggetQty = transactionData[0].nuggetQty;
        this.chickenQty = transactionData[0].chickenQty;
        
        addDataToTable();
        grandTotal = burgerQty*burgerPrice + pizzaQty*pizzaPrice + 
                      nachosQty*nachosPrice + tacoQty*tacoPrice +
                      nuggetQty*nuggetPrice + chickenQty*chickenPrice;
         
         String grandTotal = Integer.toString(this.grandTotal);
         grandTotalLabel.setText(grandTotal);
         
         cartData[0] = new CartForm();
        
//        System.out.println("burger"+burgerQty);
//        System.out.println("p"+pizzaQty);
//        System.out.println("na"+nachosQty);
//        System.out.println("t"+tacoQty);
//        System.out.println("nu"+nuggetQty);
//        System.out.println("chi"+chickenQty);
//        
    }

    private void addDataToTable(){
        DefaultTableModel table = (DefaultTableModel) dataTable.getModel();
        
        if(burgerOrdered){
             table.addRow(new Object[] {burgerId,"Burger",burgerPrice,burgerQty});
        }
        if(nachosOrdered){
             table.addRow(new Object[] {nachosId,"Nachos",nachosPrice,nachosQty});
        }
        if(nuggetOrdered){
             table.addRow(new Object[] {nuggetId,"Nugget",nuggetPrice,nuggetQty});
        }
        if(pizzaOrdered){
             table.addRow(new Object[] {pizzaId,"Pizza",pizzaPrice,pizzaQty});
        }
        if(tacoOrdered){
             table.addRow(new Object[] {tacoId,"Taco",tacoPrice,tacoQty});
        }
        if(chickenOrdered){
             table.addRow(new Object[] {chickenId,"Chicken",chickenPrice,chickenQty});
        }
       
        
       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        detailPanel = new javax.swing.JPanel();
        transactionPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        quantityField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        subTotalLabel = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        grandTotalLabel = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        backBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        delBtn = new javax.swing.JButton();
        payBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        tablePanel.setLayout(new javax.swing.BoxLayout(tablePanel, javax.swing.BoxLayout.LINE_AXIS));

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Price", "Quantity"
            }
        ));
        dataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dataTable);

        tablePanel.add(jScrollPane1);

        getContentPane().add(tablePanel);

        detailPanel.setLayout(new java.awt.BorderLayout());

        transactionPanel.setBackground(new java.awt.Color(153, 0, 0));
        transactionPanel.setLayout(new java.awt.GridLayout(6, 2));

        jLabel1.setBackground(new java.awt.Color(153, 0, 0));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 51));
        jLabel1.setText("ID");
        transactionPanel.add(jLabel1);

        idLabel.setBackground(new java.awt.Color(153, 0, 0));
        idLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        idLabel.setForeground(new java.awt.Color(255, 204, 51));
        transactionPanel.add(idLabel);

        jLabel3.setBackground(new java.awt.Color(153, 0, 0));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 204, 51));
        jLabel3.setText("Name");
        transactionPanel.add(jLabel3);

        nameLabel.setBackground(new java.awt.Color(153, 0, 0));
        nameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(255, 204, 51));
        transactionPanel.add(nameLabel);

        jLabel5.setBackground(new java.awt.Color(153, 0, 0));
        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 204, 51));
        jLabel5.setText("Price");
        transactionPanel.add(jLabel5);

        priceLabel.setBackground(new java.awt.Color(153, 0, 0));
        priceLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        priceLabel.setForeground(new java.awt.Color(255, 204, 51));
        transactionPanel.add(priceLabel);

        jLabel7.setBackground(new java.awt.Color(153, 0, 0));
        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 204, 51));
        jLabel7.setText("Quantity");
        transactionPanel.add(jLabel7);
        transactionPanel.add(quantityField);

        jLabel8.setBackground(new java.awt.Color(153, 0, 0));
        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 204, 51));
        jLabel8.setText("Sub Total");
        transactionPanel.add(jLabel8);

        subTotalLabel.setBackground(new java.awt.Color(153, 0, 0));
        subTotalLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        subTotalLabel.setForeground(new java.awt.Color(255, 204, 51));
        transactionPanel.add(subTotalLabel);

        jLabel10.setBackground(new java.awt.Color(153, 0, 0));
        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 204, 51));
        jLabel10.setText("Grand Total");
        transactionPanel.add(jLabel10);

        grandTotalLabel.setBackground(new java.awt.Color(153, 0, 0));
        grandTotalLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        grandTotalLabel.setForeground(new java.awt.Color(255, 204, 51));
        transactionPanel.add(grandTotalLabel);

        detailPanel.add(transactionPanel, java.awt.BorderLayout.CENTER);

        buttonPanel.setBackground(new java.awt.Color(153, 0, 0));
        buttonPanel.setLayout(new java.awt.GridLayout(1, 0));

        backBtn.setBackground(new java.awt.Color(251, 75, 78));
        backBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 204, 51));
        backBtn.setText("Back");
        backBtn.setMargin(new java.awt.Insets(0, 0, 0, 0));
        backBtn.setPreferredSize(new java.awt.Dimension(60, 75));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(backBtn);

        updateBtn.setBackground(new java.awt.Color(251, 75, 78));
        updateBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(255, 204, 51));
        updateBtn.setText("Update");
        updateBtn.setMargin(new java.awt.Insets(0, 0, 0, 0));
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(updateBtn);

        delBtn.setBackground(new java.awt.Color(251, 75, 78));
        delBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        delBtn.setForeground(new java.awt.Color(255, 204, 51));
        delBtn.setText("Delete");
        delBtn.setMargin(new java.awt.Insets(0, 0, 0, 0));
        delBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(delBtn);

        payBtn.setBackground(new java.awt.Color(251, 75, 78));
        payBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        payBtn.setForeground(new java.awt.Color(255, 204, 51));
        payBtn.setText("Pay Now");
        payBtn.setMargin(new java.awt.Insets(0, 0, 0, 0));
        payBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(payBtn);

        cancelBtn.setBackground(new java.awt.Color(251, 75, 78));
        cancelBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cancelBtn.setForeground(new java.awt.Color(255, 204, 51));
        cancelBtn.setText("Cancel");
        cancelBtn.setMargin(new java.awt.Insets(0, 0, 0, 0));
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(cancelBtn);

        saveBtn.setBackground(new java.awt.Color(251, 75, 78));
        saveBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        saveBtn.setForeground(new java.awt.Color(255, 204, 51));
        saveBtn.setText("Save");
        saveBtn.setMargin(new java.awt.Insets(0, 0, 0, 0));
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        buttonPanel.add(saveBtn);

        detailPanel.add(buttonPanel, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(detailPanel);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        
        // set data to cartData's variable for passing
        cartData[0].burgerQty = burgerQty ;
        cartData[0].nachosQty = nachosQty; 
        cartData[0].pizzaQty = pizzaQty;
        cartData[0].tacoQty = tacoQty;
        cartData[0].nuggetQty = nuggetQty;
        cartData[0].chickenQty = chickenQty;
        
        cartData[0].burgerOrdered = burgerOrdered;
        cartData[0].nachosOrdered = nachosOrdered;
        cartData[0].pizzaOrdered = pizzaOrdered;
        cartData[0].tacoOrdered = tacoOrdered;
        cartData[0].nuggetOrdered = nuggetOrdered;
        cartData[0].chickenOrdered = chickenOrdered;
        new MainForm(cartData).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        quantityField.setEnabled(true);
        backBtn.setVisible(false);
        updateBtn.setVisible(false);
        delBtn.setVisible(false);
        payBtn.setVisible(false);
        cancelBtn.setVisible(true);
        saveBtn.setVisible(true);
    }//GEN-LAST:event_updateBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        quantityField.setEnabled(false);
        backBtn.setVisible(true);
        updateBtn.setVisible(true);
        delBtn.setVisible(true);
        payBtn.setVisible(true);
        cancelBtn.setVisible(false);
        saveBtn.setVisible(false);
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void dataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataTableMouseClicked
        DefaultTableModel table = (DefaultTableModel) dataTable.getModel();
        int selectedRowIndex = dataTable.getSelectedRow();
        
        // counting subtotal and converting it to string
        int price = (int) table.getValueAt(selectedRowIndex, 2);
        int quantity = (int) table.getValueAt(selectedRowIndex, 3);
        subTotal = price*quantity;
        String subPrice = Integer.toString(subTotal);
        
        //get current Id 
        currentSelectedId = table.getValueAt(selectedRowIndex, 0).toString();
        
        idLabel.setText(table.getValueAt(selectedRowIndex, 0).toString());
        nameLabel.setText(table.getValueAt(selectedRowIndex, 1).toString());
        priceLabel.setText(table.getValueAt(selectedRowIndex, 2).toString());
        quantityField.setText(table.getValueAt(selectedRowIndex, 3).toString());
        subTotalLabel.setText(subPrice);
        
    }//GEN-LAST:event_dataTableMouseClicked

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        
        DefaultTableModel table = (DefaultTableModel) dataTable.getModel();
        
        if(currentSelectedId.equals("FD001")){ 
            burgerQty = Integer.parseInt(quantityField.getText());
            table.setValueAt(burgerQty, dataTable.getSelectedRow(), 3);
            table.fireTableDataChanged();
        }
        else if(currentSelectedId.equals("FD002")){ 
            nachosQty = Integer.parseInt(quantityField.getText());
            table.setValueAt(nachosQty, dataTable.getSelectedRow(), 3);
            table.fireTableDataChanged();
        }
        else if(currentSelectedId.equals("FD003")){ 
            nuggetQty = Integer.parseInt(quantityField.getText());
            table.setValueAt(nuggetQty, dataTable.getSelectedRow(), 3);
            table.fireTableDataChanged();
        }
        else if(currentSelectedId.equals("FD004")){ 
            pizzaQty = Integer.parseInt(quantityField.getText());
            table.setValueAt(pizzaQty, dataTable.getSelectedRow(), 3);
            table.fireTableDataChanged();
        }
        else if(currentSelectedId.equals("FD005")){ 
            tacoQty = Integer.parseInt(quantityField.getText());
            table.setValueAt(tacoQty, dataTable.getSelectedRow(), 3);
            table.fireTableDataChanged();
        }
        else if(currentSelectedId.equals("FD006")){ 
            chickenQty = Integer.parseInt(quantityField.getText());
            table.setValueAt(chickenQty, dataTable.getSelectedRow(), 3);
            table.fireTableDataChanged();
        }
        
        System.out.println(currentSelectedId);
        System.out.println(burgerQty);
        
        quantityField.setEnabled(false);
        backBtn.setVisible(true);
        updateBtn.setVisible(true);
        delBtn.setVisible(true);
        payBtn.setVisible(true);
        cancelBtn.setVisible(false);
        saveBtn.setVisible(false);
    }//GEN-LAST:event_saveBtnActionPerformed

    private void payBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payBtnActionPerformed
        DefaultTableModel table = (DefaultTableModel) dataTable.getModel();
        table.setRowCount(0);
        burgerOrdered = nachosOrdered = nuggetOrdered = pizzaOrdered = tacoOrdered = chickenOrdered = false;
        burgerQty = nachosQty = nuggetQty = pizzaQty = tacoQty = chickenQty = 0;
        JOptionPane.showMessageDialog(this, "Food Successfully Paid!");
    }//GEN-LAST:event_payBtnActionPerformed

    private void delBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBtnActionPerformed
        DefaultTableModel table = (DefaultTableModel) dataTable.getModel();
        table.removeRow(dataTable.getSelectedRow());
        
        if(currentSelectedId == "FD001"){
            burgerOrdered = false;
            burgerQty = 0;
        }
        else if(currentSelectedId == "FD002"){
            nachosOrdered = false;
            nachosQty = 0;
        }
        else if(currentSelectedId == "FD003"){
            nuggetOrdered = false;
            nuggetQty = 0;
        }
        else if(currentSelectedId == "FD004"){
            pizzaOrdered = false;
            pizzaQty = 0;
        }
        else if(currentSelectedId == "FD005"){
            tacoOrdered = false;
            tacoQty = 0;
        }
        else if(currentSelectedId == "FD006"){
            chickenOrdered = false;
            chickenQty = 0;
        }
    }//GEN-LAST:event_delBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CartForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JTable dataTable;
    private javax.swing.JButton delBtn;
    private javax.swing.JPanel detailPanel;
    private javax.swing.JLabel grandTotalLabel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton payBtn;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JTextField quantityField;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel subTotalLabel;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JPanel transactionPanel;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
